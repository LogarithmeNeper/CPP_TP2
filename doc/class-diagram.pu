@startuml

class Catalogue {
  +Catalogue()
  +~Catalogue() virtual
  +ajouter(Trajet* trajet) override : bool
  +supprimer(Trajet* trajet) override : bool
  +rechercheTrajetsEnDepartDe(const char* villeDepart) const : ListeChaineeTrajets
  +rechercheTrajetSimple(const char* villeDepart, const char* villeArrivee) const : void
  +rechercheTrajetAvancee(const char* villeDepart, const char* villeArrivee) const : void
  +afficher(ostream & out) const : void
  +ajouterListeTrajets(ListeChaineeTrajets & liste) : void
  #sousRechercheTrajetAvancee(const char* villeDepart, const char* villeArrivee, bool* trajetsParcourus, ListeChaineeTrajets* chemin) const : void
}

class ListeChaineeTrajets {
  #premierMaillon : MaillonListeChaineeTrajets*
  #dernierMaillon : MaillonListeChaineeTrajets*
  #taille : unsigned int
  +ListeChaineeTrajets()
  +~ListeChaineeTrajets() virtual
  +ajouter(Trajet* unTrajet) virtual : bool
  +supprimer(Trajet* unTrajet) virtual : bool
  +effacerEnSurface() : void
  +effacerEnProfondeur() : void
  +get(unsigned int index) const : MaillonListeChaineeTrajets*
  +getTaille() const : unsigned int
  +estVide() const : bool
  +contient(const Trajet* unTrajet) const : bool
}

class MaillonListeChaineeTrajets {
  #trajet : Trajet*
  #maillonSuivant : MaillonListeChaineeTrajets*
  +MaillonListeChaineeTrajets(Trajet* unTrajet)
  +~MaillonListeChaineeTrajets() virtual
  +getMaillonSuivant() const : MaillonListeChaineeTrajets*
  +setMaillonSuivant(MaillonListeChaineeTrajets* unMaillon) : void
  +getTrajet() const : Trajet*
}

class StringHelper {
  +strempty(const char* str) : bool
  +estEntierNaturel(const char* str) : bool
}

class Trajet {
  +estValide() const virtual : bool
  +afficher(ostream & out) const virtual : void
  +getVilleDepart() const virtual : const char*
  +getVilleArrivee() const virtual : const char*
  +getIndice() const : unsigned int
  +setIndice(unsigned int unIndice) : void
  #indice : unsigned int
}

class TrajetCompose  {
  +TrajetCompose()
  +~TrajetCompose() virtual
  +ajouter(Trajet* trajet) override : bool
  +supprimer(Trajet* trajet) override : bool
  +estValide() const override : bool
  +afficher(ostream & out) const override : void
  +getVilleDepart() const override : const char*
  +getVilleArrivee() const override : const char*
}

class TrajetSimple {
  #villeDepart : const char*
  #villeArrivee : const char*
  #typeTransport : const char*
  +TrajetSimple(const char* uneVilleDepart, const char* uneVilleArrivee, const char* unTypeTransport)
  +~TrajetSimple() virtual
  +estValide() const override : bool
  +afficher(ostream & out) const override : void
  +getVilleDepart() const override : const char*
  +getVilleArrivee() const override : const char*
  +getTypeTransport() const : const char*
}

class FiltreTrajets {
  +filtrerParType(ListeChaineeTrajets& trajets, TypeTrajet typeTrajet) static : ListeChaineeTrajets*
  +filtrerParVilleDepart(ListeChaineeTrajets& trajets, const std::string& villeDepart) static : ListeChaineeTrajets*
  +filtrerParVilleArrivee(ListeChaineeTrajets& trajets, const std::string& villeArrivee) static : ListeChaineeTrajets*
  +filtrerParVilleDepartEtArrivee(ListeChaineeTrajets& trajets, const std::string& villeDepart, const std::string& villeArrivee) static : ListeChaineeTrajets*
  +filtrerParIntervalle(ListeChaineeTrajets& trajets, const unsigned int n, const unsigned int m) static : ListeChaineeTrajets*
}

class GestionnaireSauvegardeTrajets {
  +ecrireSauvegarde(const ListeChaineeTrajets& uneListe, const std::string unNomFichier) static : bool
  +lireSauvegarde(const std::string unNomFichier) static : ListeChaineeTrajets*
  #ecrireTrajet(std::ofstream& s, const Trajet* t) static : void
  #lireTrajetSimple(std::ifstream& s, unsigned int & ligneAct) static : TrajetSimple*
  #lireTrajetCompose(std::ifstream& s, unsigned int & ligneAct) static : TrajetCompose*
}

ListeChaineeTrajets <|-- Catalogue : "herite de"

Trajet <|-- TrajetSimple : "herite de"

Trajet <|-- TrajetCompose : "herite de"

ListeChaineeTrajets <|-- TrajetCompose : "herite de"

ListeChaineeTrajets --> MaillonListeChaineeTrajets : "contient"

MaillonListeChaineeTrajets --> Trajet : "contient"

@enduml
